How did viewing a diff between two versions of a file help you see the bug that was introduced?
if the bug is a typo the deleted existing code that was fine the bug 
is showen as a difference. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
1. changing my mind
2. doing mistakes
3. remembering what I did first

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google Docs does?
PROS
it saves commit only when there is a logical meaning
the commits helps understand the true diff in versions
CONS
if you are lazy you might forget to commit
you might have too many commits the are not as important

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?
when coding a lot of times files are connected to one another, so change in one file will have to change other files. 
in that case there is no use in commiting each file seperatly

How can you use the commands git log and git diff to view the history of files?
git logg shows me the different commits that were made, base on them I can choose to use diff on which commit I want
in order to understand the changes that were done.

How might using version control make you more confident to make changes that could break something?
you can always come back to the previous version, before you messed things up

Now that you have your workspace set up, what do you want to try using Git for?
controling changes of my project 
